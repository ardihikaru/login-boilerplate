name: Lint the code, run tests, build and push Docker image

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '**'
  release:
    types: [published, edited]

env:
  DOCKER_REPOSITORY: ${{ github.repository }}

jobs:
  # Run code tests before building the image, to ensure it is good to go
  build:
    name: Run code tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
      with:
        ref: main
    - name: Setting up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
    
    - name: Lint the code with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

# Disable the pytest for the time being (will be fixed later on)
#    - name: Test with pytest
#      run: |
#        python -m pytest

# Build and push the Docker image
  push_to_registry:
    name: Build and push Docker image to Docker Hub
    # ...but only when a `release` is `published` (combined with `on`)
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          ref: main
      
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          # If there is no such repo on the docker hub, it creates a PUBLIC repo as the default
          # If you want to have a private repo, try to create a private repo first
          tags: ${{ env.DOCKER_REPOSITORY }}:latest
