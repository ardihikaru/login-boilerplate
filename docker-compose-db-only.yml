version: "3.7"

# How to run: `$ docker-compose -f docker-compose-db-only.yml --env-file .env.compose up --remove-orphans`

services:
  postgresdb:
    container_name: postgresdb_standalone
    restart: unless-stopped
    image: postgres:12
#    volumes:
#      - ./data/postgresdb_data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DEFAULT_DATABASE_DB}
      - POSTGRES_USER=${DEFAULT_DATABASE_USER}
      - POSTGRES_PASSWORD=${DEFAULT_DATABASE_PASSWORD}
    env_file:
      - .env.compose
    ports:
      - "${EXPOSED_DEFAULT_DATABASE_PORT}:${DEFAULT_DATABASE_PORT}"
    networks:
      - database

  test_postgresdb:
    container_name: test_postgresdb_standalone
    restart: unless-stopped
    image: postgres:12
#    volumes:
#      - ./data/test_postgresdb_data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${TEST_DATABASE_DB}
      - POSTGRES_USER=${TEST_DATABASE_USER}
      - POSTGRES_PASSWORD=${TEST_DATABASE_PASSWORD}
    env_file:
      - .env.compose
    ports:
      - "${EXPOSED_TEST_DATABASE_PORT}:${TEST_DATABASE_PORT}"
    networks:
      - database

networks:
  app:
    name: app
  database:
    name: database